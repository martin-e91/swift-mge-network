# Build and deploy DocC to GitHub pages. Based off of @pointfree's work here:
# https://github.com/pointfreeco/swift-MGENetwork/blob/main/.github/workflows/documentation.yml
name: Documentation

on:
  release:
    types:
      - published
  push:
    branches:
      - feature/add-documentation

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      TARGET_NAME: MGENetwork
      OUTPUT_DIR: docs-out

    steps:
      - name: Checkout Package
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Download Swift 5.6.2
        run: wget -q https://download.swift.org/swift-5.6.2-release/ubuntu2004/swift-5.6.2-RELEASE/swift-5.6.2-RELEASE-ubuntu20.04.tar.gz

      - name: Extract Swift 5.6.2
        run: tar xzf swift-5.6.2-RELEASE-ubuntu20.04.tar.gz

      - name: Add Swift toolchain to PATH
        run: |
          echo "$GITHUB_WORKSPACE/swift-5.6.2-RELEASE-ubuntu20.04/usr/bin" >> $GITHUB_PATH

      - name: Checkout swift-docc
        uses: actions/checkout@v2
        with:
          repository: apple/swift-docc
          ref: main
          path: swift-docc

      - name: Cache DocC
        id: cache-docc
        uses: actions/cache@v2
        with:
          key: swift-url-docc-build
          path: swift-docc/.build

      - name: Build swift-docc
        if: ${{ !steps.cache-docc.outputs.cache-hit }}
        run: |
          cd swift-docc; swift build --product docc -c release; cd ..

      - name: Checkout swift-docc-render
        uses: actions/checkout@v2
        with:
          repository: apple/swift-docc-render
          ref: main
          path: swift-docc-render

      - name: Build swift-docc-render
        run: |
          cd swift-docc-render; npm install && npm run build; cd ..

      - name: Checkout gh-pages Branch
        uses: actions/checkout@v2
        with:
          ref: gh-pages
          path: ${{ env.OUTPUT_DIR }}

      - name: Resolve Swift Package dependencies
        run: swift package resolve

      - name: Generate documentation for every package version
        run: |
          rm -rf ${{ env.OUTPUT_DIR }}/.git;
          rm -rf ${{ env.OUTPUT_DIR }}/master;

          for tag in $(echo "master"; git tag);
          do
            echo "⏳ Generating documentation for "$tag" release.";

            if [ -d "${{ env.OUTPUT_DIR }}/$tag" ]
            then
              echo "✅ Documentation for "$tag" already exists.";
            else
              git checkout "$tag";
              mkdir -p Sources/Parsing/Documentation.docc;
              export DOCC_HTML_DIR="$(pwd)/swift-docc-render/dist";
              rm -rf .build/symbol-graphs;
              mkdir -p .build/symbol-graphs;

              swift build -v -Xswiftc "-sdk" -Xswiftc "`xcrun --sdk iphonesimulator --show-sdk-path`" -Xswiftc "-target" -Xswiftc "x86_64-apple-ios13.0-simulator" --target ${{ env.TARGET_NAME }} \
                && swift-docc/.build/release/docc convert Sources/Parsing/Documentation.docc \
                  --fallback-display-name ${{ env.TARGET_NAME }} \
                  --fallback-bundle-identifier com.mge.MGENetwork \
                  --fallback-bundle-version 0.0.0 \
                  --transform-for-static-hosting \
                  --hosting-base-path /swift-mge-network/"$tag" \
                  --output-path ${{ env.OUTPUT_DIR }}/"$tag" \
                  && echo "✅ Documentation generated for "$tag" release." \
                  || echo "⚠️ Documentation skipped for "$tag".";
            fi;
          done

      - name: Publish documentation to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@4.1.7
        with:
          branch: gh-pages
          folder: ${{ env.OUTPUT_DIR }}
          single-commit: true
